package day0715;

import viewer.TotalViewer;

public class BoardTotal {

	public static void main(String[] args) {
		   // 1. index()
        // 2. BoardViewer.showMenu() + UserViewer.showMenu()
        // 3. 글 쓰기의 경우, 더이상 작성자 이름을 직접 적는것이 아니라
        //    로그인한 회원의 회원 번호가 들어가게 만들어준다.
        // 4. 글 수정이나 삭제의 경우 로그인한 회원이 작성자일 경우에만
        //    가능하게 만들어준다.
        //    작성자가 아닐 경우, 글을 보고 나서 뒤로가기 만 가능하게 만들어준다.
        // 5. 회원 정보 보기에서는 자기가 작성한글 목록 보기, 회원 정보 수정,
        //    회원 탈퇴 기능이 있다.
        // 5-A. 자기가 작성한글 목록 보기
        //      1. 지금 현재 시작 되는 곳은 유저뷰어가 될 것이다.
        //         따라서, 우리는 제일 먼저 유저뷰어와 보드뷰어를
        //         연결시켜주어야 한다.
        //      2. 연결시켜주기 위해서, 유저뷰어 클래스에 
        //         보드뷰어 필드를 만들어준다.
        //      3. setter를 사용하여, 토탈뷰어에서 만든
        //         보드 뷰어 객체를 유저뷰어의 setBoardViewer()로 넘겨서
        //         2개를 링크 시켜준다.
        //      4. 지금 로그인한 사람이 무슨 글을 썼는지 알기 위해서는
        //         그 사람의 회원 번호와 작성자 회원 번호가 일치되는
        //         글들의 목록을 뽑아야한다. 
        //         하지만, 우리가 가지고 있는 메소드들 중에서
        //         회원번호를 토대로 해서 목록을 뽑아주는 메소드가 없으니
        //         해당 메소드를 컨트롤러부터 만들어준다.
        //      5. 컨트롤러에서 어레이리스트를 리턴해주면, 그 리스트를 받아서
        //         화면에 출력해주는 메소드를 boardViewer에 만들어준다.
        //      6. 그렇게 만든 메소드를 유저뷰어에서 실행시켜준다.
        
        // 6. 회원 탈퇴시, 자기가 작성한 글들도 모두 삭제된다.
        //    1. 회원 탈퇴를 정말 할것인지 물어본다.
        //    2. 만약 사용자가 탈퇴를 정말 동의하면
        //       먼저 게시글 리스트에서 작성자 회원번호가
        //       해당 회원의 회원번호와 일치되는 BoardDTO 객체들을 모두 삭제한다.
        //    3. 해당 회원을 회원 리스트에서 삭제한다.
        //    4. 로그아웃시키고 인덱스 화면으로 돌아간다.
        TotalViewer totalViewer = new TotalViewer();
        totalViewer.showIndex();
    }
}